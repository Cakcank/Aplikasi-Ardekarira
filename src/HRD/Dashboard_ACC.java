/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package HRD;
import java.util.ArrayList;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DOSTAKIJO
 */
public class Dashboard_ACC extends javax.swing.JFrame {
    private ArrayList<Integer> idList = new ArrayList<>();

    /**
     * Creates new form Dashboard_ACC_HRD
     */
    public Dashboard_ACC() {
        initComponents();
        tampilkanDataACC();
    }
    
    private void tampilkanDataACC() {
        try {
            Connection conn = Admin.DatabaseConnection.connect();
            String sql = "SELECT * FROM users_request WHERE Akses = 'Pegawai' AND Status = 'Pending'";
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("ID");
            model.addColumn("Username");
            model.addColumn("Password");
            model.addColumn("Akses");
            model.addColumn("Status");

            idList.clear(); // Reset dulu list ID aslinya

            int no = 1;
            while (rs.next()) {
                idList.add(rs.getInt("ID")); // Simpan ID asli
                model.addRow(new Object[]{
                    no++, // Tampilkan nomor urut
                    rs.getString("Username"),
                    rs.getString("Password"),
                    rs.getString("Akses"),
                    rs.getString("Status")
                });
            }

            jTable1.setModel(model);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "❌ Gagal menampilkan data: " + e.getMessage());
        }
    }
    
    private void resetAutoIncrement(String namaTabel) {
        if (namaTabel == null || namaTabel.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "❌ Nama tabel tidak valid untuk reset!");
            return;
        }

        try {
            Connection conn = Admin.DatabaseConnection.connect();
            Statement stmt = conn.createStatement();

            // 1. Backup ke tabel sementara
            stmt.executeUpdate("CREATE TABLE temp_" + namaTabel + " AS SELECT * FROM " + namaTabel);

            // 2. Kosongkan isi
            stmt.executeUpdate("DELETE FROM " + namaTabel);

            // 3. Reset auto increment
            stmt.executeUpdate("ALTER TABLE " + namaTabel + " AUTO_INCREMENT = 1");

            // 4. Masukkan kembali data
            String queryInsert;
            if (namaTabel.equals("users")) {
                queryInsert = "INSERT INTO " + namaTabel + " (Username, Password, Akses, Jabatan, Status, Gaji) " +
                              "SELECT Username, Password, Akses, Jabatan, Status, Gaji FROM temp_" + namaTabel;
            } else {
                queryInsert = "INSERT INTO " + namaTabel + " (Username, Password, Akses, Status) " +
                              "SELECT Username, Password, Akses, Status FROM temp_" + namaTabel;
            }

            stmt.executeUpdate(queryInsert);

            // 5. Hapus tabel sementara
            stmt.executeUpdate("DROP TABLE temp_" + namaTabel);

            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "❌ Gagal merapikan ID: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Search : ");

        jButton1.setText("GO ⇨");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Terima");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 0, 0));
        jButton3.setText("Tolak");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Tampil Data");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("⇦  BACK");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Lamaran Pegawai");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4)))
                        .addGap(0, 164, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "⚠️ Pilih salah satu baris yang ingin ditolak!");
            return;
        }

        int id = idList.get(selectedRow); // Ambil ID asli dari list

        try {
            Connection conn = Admin.DatabaseConnection.connect();

            String delete = "DELETE FROM users_request WHERE ID = ?";
            PreparedStatement deleteStmt = conn.prepareStatement(delete);
            deleteStmt.setInt(1, id);
            deleteStmt.executeUpdate();

            resetAutoIncrement("users_request");

            JOptionPane.showMessageDialog(this, "🚫 Pendaftaran ditolak.");
            tampilkanDataACC();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "❌ Error saat menolak: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        tampilkanDataACC();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String keyword = jTextField1.getText().trim();

        if (keyword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "⚠️ Masukkan username yang ingin dicari.");
            return;
        }

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Username");
        model.addColumn("Password");
        model.addColumn("Akses");
        model.addColumn("Status");

        try (Connection conn = Admin.DatabaseConnection.connect();
             PreparedStatement stmt = conn.prepareStatement(
                 "SELECT * FROM users_request WHERE Akses = 'Pegawai' AND Status = 'Pending' AND Username LIKE ?")) {

            stmt.setString(1, "%" + keyword + "%");
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("ID"),
                    rs.getString("Username"),
                    rs.getString("Password"),
                    rs.getString("Akses"),
                    rs.getString("Status")
                });
            }

            jTable1.setModel(model);

            if (model.getRowCount() == 0) {
                tampilkanDataACC();
                JOptionPane.showMessageDialog(this, "❌ User tidak ditemukan.");
            }

            jTextField1.setText("");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "❌ Terjadi kesalahan saat mencari: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            int baris = jTable1.getSelectedRow();
            if (baris == -1) {
                JOptionPane.showMessageDialog(this, "⚠️ Silakan pilih baris yang ingin diterima terlebih dahulu.");
                return;
            }

            int id = idList.get(baris); // Ambil ID asli
            String username = (String) jTable1.getValueAt(baris, 1);
            String password = (String) jTable1.getValueAt(baris, 2);
            String akses = (String) jTable1.getValueAt(baris, 3);
            String jabatan = akses;

            Connection conn = Admin.DatabaseConnection.connect();

            // Cek username duplikat
            PreparedStatement cekStmt = conn.prepareStatement("SELECT * FROM users WHERE Username = ?");
            cekStmt.setString(1, username);
            ResultSet hasil = cekStmt.executeQuery();
            if (hasil.next()) {
                JOptionPane.showMessageDialog(this, "❌ Username '" + username + "' sudah ada di data aktif.");
                return;
            }

            // Insert ke tabel users
            String insertQuery = "INSERT INTO users (Username, Password, Akses, Jabatan, Status) VALUES (?, ?, ?, ?, 'Aktif')";
            PreparedStatement insertStmt = conn.prepareStatement(insertQuery);
            insertStmt.setString(1, username);
            insertStmt.setString(2, password);
            insertStmt.setString(3, akses);
            insertStmt.setString(4, jabatan);
            insertStmt.executeUpdate();

            // Hapus dari users_request
            String deleteQuery = "DELETE FROM users_request WHERE ID = ?";
            PreparedStatement deleteStmt = conn.prepareStatement(deleteQuery);
            deleteStmt.setInt(1, id);
            deleteStmt.executeUpdate();

            // Reset ID
            resetAutoIncrement("users");
            resetAutoIncrement("users_request");

            JOptionPane.showMessageDialog(this, "✅ Data berhasil diterima sebagai " + akses + " dengan status AKTIF.");
            tampilkanDataACC(); // Refresh tabel
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "❌ Terjadi kesalahan saat menerima data: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        new HRD.Dashboard_HRD().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard_ACC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard_ACC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard_ACC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard_ACC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard_ACC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pelanggan;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Timestamp;

/**
 *
 * @author DOSTAKIJO
 */
public class Dashboard_Pembayaran extends javax.swing.JFrame {
    private int total, bayar, kembalian;
    private String pesanan, asal, metode_pembayaran;
    
    private Dashboard_Menu_Makanan menuMakanan;
    
    private Dashboard_Menu_Minuman menuMinuman;
    
    private Dashboard_Menu_Makanan_Minuman menuMakananMinuman;

    /**
     * Creates new form Dashboard_Pembayaran
     */
    public Dashboard_Pembayaran() {
        initComponents();
        
    jComboBox1.removeAllItems();
    for (String nama : Data_Global.semuaPesananPerNama.keySet()) {
        if (!Data_Global.daftarSudahBayar.contains(nama)) {
            jComboBox1.addItem(nama);
        }
    }

    
    }
    
    public Dashboard_Pembayaran(String pesanan, int total, String asal, Dashboard_Menu_Makanan sebelumnya){
        initComponents();
        this.pesanan = pesanan;
        this.asal = asal;
        this.total = total;
        this.menuMakanan = sebelumnya;
        jButton5.setEnabled(true);
    }

    public Dashboard_Pembayaran(String pesanan, int total, String asal, Dashboard_Menu_Minuman sebelumnya){       
        initComponents();
        this.pesanan = pesanan;
        this.asal = asal;
        this.total = total;
        this.menuMinuman = sebelumnya;
        jButton5.setEnabled(true);
    }
    
    public Dashboard_Pembayaran(String pesanan, int total, String asal, Dashboard_Menu_Makanan_Minuman sebelumnya){    
        initComponents();
        this.pesanan = pesanan;
        this.asal = asal;
        this.total = total;
        this.menuMakananMinuman = sebelumnya;
        jButton5.setEnabled(true);   
    }
    
    private void tampilkanPesananBelumBayar() {
    jTextArea1.setText(""); // Kosongkan dulu

    // Jika belum ada pesanan sama sekali
    if (Data_Global.semuaPesananPerNama.isEmpty()) {
        jTextArea1.append("‚úîÔ∏è Semua pesanan sudah dibayar.\n");
        return;
    }

    // Tampilkan semua pesanan per nama pemesan
    for (String nama : Data_Global.semuaPesananPerNama.keySet()) {
        jTextArea1.append("üë§ Nama Pemesan: " + nama + "\n");

        var daftarPesanan = Data_Global.semuaPesananPerNama.get(nama);
        var daftarTotal = Data_Global.semuaTotalPerNama.get(nama);

        int total = 0;

        for (int i = 0; i < daftarPesanan.size(); i++) {
            String pesan = daftarPesanan.get(i);
            int harga = daftarTotal.get(i);
            total += harga;

            jTextArea1.append("  üìù Pesanan ke-" + (i + 1) + ": " + pesan + "\n");
            jTextArea1.append("     Harga         : Rp " + harga + "\n");
        }

        jTextArea1.append("  üí∞ Total Seluruh : Rp " + total + "\n");
        jTextArea1.append("--------------------------------------------------\n");
    }
}


    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Tampilkan");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setText("Simpan");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 0, 0));
        jButton6.setText("Hapus");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton4.setText("Ke Halaman Utama");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Silahkan Pilih Metode Pembayaran :");

        jCheckBox1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox1.setText("Cash");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox2.setText("Gopay");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Masukan Nominal :");

        jButton1.setText("Bayar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Payment");

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Nama Pemesan :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBox2)
                                .addComponent(jCheckBox1)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1))))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(313, 313, 313))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jButton2)
                            .addComponent(jButton6))
                        .addGap(0, 15, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()) {
            jCheckBox2.setSelected(false);
        }

    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String nama = (String) jComboBox1.getSelectedItem();          // nama sudah pasti ada

        /*=== 1. Validasi nominal =================================================*/
        String inputBayar = jTextField1.getText().trim();
        if (inputBayar.isEmpty()) {
            JOptionPane.showMessageDialog(this, "‚ö†Ô∏è Silakan masukkan nominal pembayaran terlebih dahulu!");
            return;
        }

        int nominalBayar;
        try {
            nominalBayar = Integer.parseInt(inputBayar);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "‚ö†Ô∏è Nominal pembayaran harus berupa angka!");
            return;
        }

        /*=== 2. Validasi metode pembayaran =======================================*/
        if (!jCheckBox1.isSelected() && !jCheckBox2.isSelected()) {
            JOptionPane.showMessageDialog(this, "‚ö†Ô∏è Silakan pilih metode pembayaran (GoPay atau Cash)!");
            return;
        }
        String metode = jCheckBox1.isSelected() ? "Cash" : "GoPay";

        /*=== 3. Hitung total pesanan ============================================*/
        ArrayList<Integer> daftarHarga = Data_Global.semuaTotalPerNama.get(nama);
        int totalHarga = 0;
        for (int h : daftarHarga) totalHarga += h;

        if (nominalBayar < totalHarga) {
            JOptionPane.showMessageDialog(this, "‚ùå Uang tidak mencukupi. Total: Rp " + totalHarga);
            return;
        }

        /*=== 4. Siapkan struk ====================================================*/
        ArrayList<String> daftarPesanan = Data_Global.semuaPesananPerNama.get(nama);
        int kembalian = nominalBayar - totalHarga;

        StringBuilder struk = new StringBuilder();
        struk.append("üßæ  STRUK PEMBAYARAN\n")
             .append("-----------------------------\n")
             .append("Nama Pemesan : ").append(nama).append("\n")
             .append("Metode       : ").append(metode).append("\n\n");

        for (int i = 0; i < daftarPesanan.size(); i++) {
            struk.append("Pesanan ke-").append(i + 1).append(": ")
                 .append(daftarPesanan.get(i)).append("\n")
                 .append("Harga        : Rp ").append(daftarHarga.get(i)).append("\n\n");
        }

        struk.append("Total     : Rp ").append(totalHarga).append("\n")
             .append("Bayar     : Rp ").append(nominalBayar).append("\n")
             .append("Kembalian : Rp ").append(kembalian).append("\n")
             .append("-----------------------------\n")
             .append("‚úîÔ∏è Terima kasih atas pesanan Anda!");

        JOptionPane.showMessageDialog(this, struk.toString(), "Pembayaran Berhasil", JOptionPane.INFORMATION_MESSAGE);

        /*=== 5. Simpan metode & tandai sudah bayar ==============================*/
        Data_Global.metodePembayaranPerNama.put(nama, metode);   // simpan per nama
        Data_Global.daftarSudahBayar.add(nama);                  // tandai sudah bayar
        Data_Global.semuaPesananPerNama.remove(nama);            // hapus data pesanan
        Data_Global.semuaTotalPerNama.remove(nama);

        /*=== 6. Refresh UI =======================================================*/
        jComboBox1.removeItem(nama);          // hilangkan nama yg sudah bayar
        jTextField1.setText("");              // kosongkan nominal
        jCheckBox1.setSelected(false);           // reset checkbox
        jCheckBox2.setSelected(false);
        tampilkanPesananBelumBayar();         // tampilkan sisa pesanan
        
        Data_Global.daftarTransaksi.add(
             new Data_Global.Transaksi(nama, metode, daftarPesanan, daftarHarga, totalHarga, nominalBayar, kembalian)
        );
        
        try {
            Connection conn = DatabaseConnection.connect(); // Panggil koneksi dari class kamu
            String query = "INSERT INTO transaksi (Nama_Pemesan, Metode, Pesanan, Total, Bayar, Kembalian, Tanggal) VALUES (?, ?, ?, ?, ?, ?, ?)";

            PreparedStatement ps = conn.prepareStatement(query);

            // Gabungkan semua pesanan menjadi satu string
            StringBuilder semuaPesanan = new StringBuilder();
            for (int i = 0; i < daftarPesanan.size(); i++) {
                semuaPesanan.append(daftarPesanan.get(i))
                            .append(" (Rp ").append(daftarHarga.get(i)).append(")");
                if (i < daftarPesanan.size() - 1) semuaPesanan.append(", ");
            }

            ps.setString(1, nama);
            ps.setString(2, metode);
            ps.setString(3, semuaPesanan.toString());
            ps.setInt(4, totalHarga);
            ps.setInt(5, nominalBayar);
            ps.setInt(6, kembalian);
            ps.setTimestamp(7, new Timestamp(System.currentTimeMillis()));

            ps.executeUpdate();
            ps.close();
            conn.close();

            System.out.println("‚úÖ Transaksi berhasil disimpan ke database.");
        } catch (SQLException e) {
            System.out.println("‚ùå Gagal menyimpan ke database: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Gagal menyimpan transaksi ke database.\n" + e.getMessage());
        }
        
        if (Data_Global.semuaPesananPerNama.isEmpty()) {
            JOptionPane.showMessageDialog(this, "‚úÖ Semua pesanan telah dibayar. Kembali ke dashboard utama.");
            new Main.Dashboard_Utama().setVisible(true);
            dispose();
        }



    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText(""); // Kosongkan terlebih dahulu

boolean adaPesananBelumBayar = false;
boolean pernahAdaPesanan = false;

for (String nama : Data_Global.semuaPesananPerNama.keySet()) {
    var daftarPesanan = Data_Global.semuaPesananPerNama.get(nama);
    var daftarTotal   = Data_Global.semuaTotalPerNama.get(nama);

    if (daftarPesanan != null && !daftarPesanan.isEmpty()) {
        pernahAdaPesanan = true;

        if (!Data_Global.daftarSudahBayar.contains(nama)) {
            adaPesananBelumBayar = true;

            jTextArea1.append("üë§ Nama Pemesan: " + nama + "\n");
            int total = 0;

            for (int i = 0; i < daftarPesanan.size(); i++) {
                String pesan = daftarPesanan.get(i);
                int harga = daftarTotal.get(i);
                total += harga;

                jTextArea1.append("  üìù Pesanan ke-" + (i + 1) + ": " + pesan + "\n");
                jTextArea1.append("     Harga         : Rp " + harga + "\n");
            }

            jTextArea1.append("  üí∞ Total Seluruh : Rp " + total + "\n");
            jTextArea1.append("--------------------------------------------------\n");
        }
    }
}

if (!pernahAdaPesanan) {
    jTextArea1.setText("üì≠ Belum ada pesanan yang disimpan.");
} else if (!adaPesananBelumBayar) {
    jTextArea1.setText("‚úÖ Semua pesanan telah dibayar.");
}




    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(asal.equals("makanan") && menuMakanan != null){
            menuMakanan.setVisible(true);
        }else if(asal.equals("minuman") && menuMinuman != null){
            menuMinuman.setVisible(true);
        }else if(asal.equals("makanan_minuman") && menuMakananMinuman != null){
            menuMakananMinuman.setVisible(true);
        }
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Dashboard_Welcome welcome = new Dashboard_Welcome();
        welcome.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String nama = Data_Global.namaPemesanAktif;

        if (nama == null || nama.isEmpty()) {
            JOptionPane.showMessageDialog(this, "‚ùó Nama pemesan tidak ditemukan!");
            return;
        }

        // Pastikan list sudah ada
        if (!Data_Global.semuaPesananPerNama.containsKey(nama)) {
            Data_Global.semuaPesananPerNama.put(nama, new ArrayList<>());
            Data_Global.semuaTotalPerNama.put(nama, new ArrayList<>());
        }

        // Simpan pesanan
        Data_Global.semuaPesananPerNama.get(nama).add(pesanan);
        Data_Global.semuaTotalPerNama.get(nama).add(total);

        JOptionPane.showMessageDialog(this, "‚úÖ Pesanan atas nama \"" + nama + "\" berhasil disimpan!");

        // Refresh combo box agar muncul juga
        jComboBox1.removeAllItems();
        for (String n : Data_Global.semuaPesananPerNama.keySet()) {
            if (!Data_Global.daftarSudahBayar.contains(n)) {
                jComboBox1.addItem(n);
            }
        }

        // ‚õî Nonaktifkan tombol simpan agar tidak dobel
        jButton5.setEnabled(false);

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox2.isSelected()) {
            jCheckBox1.setSelected(false);
        }

    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        // üîí Cek apakah ComboBox kosong
        if (jComboBox1.getItemCount() == 0) {
            JOptionPane.showMessageDialog(
                this,
                "üì≠ Daftar nama pemesan masih kosong.",
                "Tidak Ada Data",
                JOptionPane.INFORMATION_MESSAGE
            );
            return;
        }

        // üßç Ambil nama pemesan yang dipilih
        String nama = jComboBox1.getSelectedItem().toString();

        // üì¶ Ambil daftar pesanan dan totalnya
        ArrayList<String> daftarPesanan = Data_Global.semuaPesananPerNama.get(nama);
        ArrayList<Integer> daftarTotal = Data_Global.semuaTotalPerNama.get(nama);

        // ‚ùó Cek jika pesanan tidak ditemukan atau kosong
        if (daftarPesanan == null || daftarPesanan.isEmpty()) {
            JOptionPane.showMessageDialog(
                this,
                "üì≠ Tidak ada pesanan tersimpan untuk nama: " + nama,
                "Pesanan Kosong",
                JOptionPane.INFORMATION_MESSAGE
            );
            return;
        }

        // üìù Input nomor pesanan yang ingin dihapus
        String input = JOptionPane.showInputDialog(
            this,
            "Masukkan nomor pesanan yang ingin dihapus (1 ‚Äì " + daftarPesanan.size() + "):"
        );
        if (input == null) return; // Dibatalkan

        try {
            int nomor = Integer.parseInt(input.trim());

            // ‚ùå Cek validitas nomor
            if (nomor < 1 || nomor > daftarPesanan.size()) {
                JOptionPane.showMessageDialog(
                    this,
                    "‚ùå Nomor pesanan tidak valid.",
                    "Kesalahan",
                    JOptionPane.ERROR_MESSAGE
                );
                return;
            }

            // ‚úÖ Konfirmasi sebelum menghapus
            int konfirmasi = JOptionPane.showConfirmDialog(
                this,
                "Yakin ingin menghapus pesanan ke-" + nomor + " atas nama \"" + nama + "\"?",
                "Konfirmasi Hapus",
                JOptionPane.YES_NO_OPTION
            );
            if (konfirmasi != JOptionPane.YES_OPTION) return;

            // üî• Hapus pesanan dan total
            daftarPesanan.remove(nomor - 1);
            daftarTotal.remove(nomor - 1);

            JOptionPane.showMessageDialog(
                this,
                "‚úÖ Pesanan ke-" + nomor + " atas nama \"" + nama + "\" berhasil dihapus.",
                "Berhasil",
                JOptionPane.INFORMATION_MESSAGE
            );

            // üîÅ Jika semua pesanan habis, hapus dari combo box
            if (daftarPesanan.isEmpty()) {
                jComboBox1.removeItem(nama);
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(
                this,
                "‚ùå Masukkan angka yang valid!",
                "Format Salah",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard_Pembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard_Pembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard_Pembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard_Pembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard_Pembayaran().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}

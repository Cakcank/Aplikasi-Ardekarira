/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Admin;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DOSTAKIJO
 */
public class Dashboard_Angkat_Jabatan_Pegawai extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard_Angkat_Jabatan_Pegawai
     */
    public Dashboard_Angkat_Jabatan_Pegawai() {
        initComponents();
        tampilkanSemuaPegawai();
    }
    
    private void resetAutoIncrement(String namaTabel) {
    try (Connection conn = DatabaseConnection.connect(); Statement stmt = conn.createStatement()) {
        stmt.executeUpdate("CREATE TABLE temp_" + namaTabel + " AS SELECT * FROM " + namaTabel);
        stmt.executeUpdate("DELETE FROM " + namaTabel);
        stmt.executeUpdate("ALTER TABLE " + namaTabel + " AUTO_INCREMENT = 1");

        stmt.executeUpdate("INSERT INTO " + namaTabel + " (Username, Password, Akses, Jabatan, Status, Gaji) " +
                "SELECT Username, Password, Akses, Jabatan, Status, Gaji FROM temp_" + namaTabel);

        stmt.executeUpdate("DROP TABLE temp_" + namaTabel);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "❌ Gagal reset ID tabel " + namaTabel + ": " + e.getMessage());
    }
}

    
    private void tampilkanSemuaPegawai() {
        try {
            Connection conn = DatabaseConnection.connect();
            String query = "SELECT * FROM users WHERE Jabatan IN ('Pegawai', 'HRD') ORDER BY " +
                           "CASE WHEN Jabatan = 'HRD' THEN 1 ELSE 2 END, ID";
            PreparedStatement stmt = conn.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("No");
            model.addColumn("ID_Hidden");
            model.addColumn("Username");
            model.addColumn("Akses");
            model.addColumn("Jabatan");
            model.addColumn("Status");

            int no = 1;
            while (rs.next()) {
                model.addRow(new Object[]{
                    no++,
                    rs.getInt("ID"),
                    rs.getString("Username"),
                    rs.getString("Akses"),
                    rs.getString("Jabatan"),
                    rs.getString("Status")
                });
            }

            jTable1.setModel(model);
            jTable1.getColumnModel().getColumn(1).setMinWidth(0);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(1).setWidth(0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "❌ Gagal menampilkan data pegawai: " + e.getMessage());
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Turunkan Jabatan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Angkat HRD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 0, 0));
        jButton3.setText("PECAT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Search : ");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton4.setText("GO ⇨");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Tampilkan Semua");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Tampilkan HRD");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Tampil Pegawai");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("⇦  BACK");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Data Jabatan");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jButton3)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5)
                            .addComponent(jButton7)
                            .addComponent(jButton6)))
                    .addComponent(jButton8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    int row = jTable1.getSelectedRow();

    if (row == -1) {
        JOptionPane.showMessageDialog(this, "⚠️ Silakan pilih pegawai yang ingin diangkat menjadi HRD.");
        return;
    }

    int id = (int) jTable1.getValueAt(row, 1); // Kolom ID_Hidden
    String jabatan = jTable1.getValueAt(row, 4).toString().trim();

    if (jabatan.equalsIgnoreCase("HRD")) {
        JOptionPane.showMessageDialog(this, "❌ Jabatan sudah HRD. Tidak bisa diangkat lagi.");
        return;
    }

    if (!jabatan.equalsIgnoreCase("Pegawai")) {
        JOptionPane.showMessageDialog(this, "❌ Hanya pegawai biasa yang bisa diangkat menjadi HRD.");
        return;
    }

    try (Connection conn = DatabaseConnection.connect()) {
        // Update jabatan di tabel users
        String sqlUpdateUsers = "UPDATE users SET Jabatan = 'HRD' WHERE ID = ?";
        PreparedStatement stmtUsers = conn.prepareStatement(sqlUpdateUsers);
        stmtUsers.setInt(1, id);
        stmtUsers.executeUpdate();

        // Update jabatan di tabel pegawai
        String sqlUpdatePegawai = "UPDATE pegawai SET Jabatan = 'HRD' WHERE ID_Pegawai = ?";
        PreparedStatement stmtPegawai = conn.prepareStatement(sqlUpdatePegawai);
        stmtPegawai.setInt(1, id);
        stmtPegawai.executeUpdate();

        JOptionPane.showMessageDialog(this, "✅ Pegawai berhasil diangkat menjadi HRD.");
        tampilkanSemuaPegawai();

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "❌ Gagal mengangkat jabatan: " + e.getMessage());
    }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
int row = jTable1.getSelectedRow();

if (row == -1) {
    JOptionPane.showMessageDialog(this, "⚠️ Silakan pilih HRD yang ingin diturunkan menjadi pegawai.");
    return;
}

int id = (int) jTable1.getValueAt(row, 1); // Kolom ID
String jabatan = jTable1.getValueAt(row, 4).toString().trim();

if (!jabatan.equalsIgnoreCase("HRD")) {
    JOptionPane.showMessageDialog(this, "❌ Yang dipilih bukan HRD. Tidak bisa diturunkan.");
    return;
}

int konfirmasi = JOptionPane.showConfirmDialog(this,
        "Yakin ingin menurunkan HRD ini menjadi Pegawai?\nData pegawai lama akan diganti.",
        "Konfirmasi Penurunan Jabatan",
        JOptionPane.YES_NO_OPTION);

if (konfirmasi != JOptionPane.YES_OPTION) return;

try (Connection conn = DatabaseConnection.connect()) {
    // ✅ 1. Update jabatan di tabel users
    String sqlUpdateUsers = "UPDATE users SET Jabatan = 'Pegawai' WHERE ID = ?";
    PreparedStatement stmtUsers = conn.prepareStatement(sqlUpdateUsers);
    stmtUsers.setInt(1, id);
    stmtUsers.executeUpdate();

    // ✅ 2. Hapus data pegawai lama
    String sqlDeletePegawai = "DELETE FROM pegawai WHERE ID_Pegawai = ?";
    PreparedStatement stmtDelete = conn.prepareStatement(sqlDeletePegawai);
    stmtDelete.setInt(1, id);
    stmtDelete.executeUpdate();

    JOptionPane.showMessageDialog(this, "✅ Jabatan berhasil diturunkan menjadi Pegawai.\nData pegawai lama dihapus.");
    tampilkanSemuaPegawai(); // refresh tabel

} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "❌ Gagal menurunkan jabatan: " + e.getMessage());
}

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
   int selectedRow = jTable1.getSelectedRow();
if (selectedRow == -1) {
    JOptionPane.showMessageDialog(this, "⚠️ Pilih salah satu data yang ingin diturunkan terlebih dahulu.");
    return;
}

String jabatan = jTable1.getValueAt(selectedRow, 4).toString(); // Kolom 4 = Jabatan
if (!jabatan.equalsIgnoreCase("HRD")) {
    JOptionPane.showMessageDialog(this, "❌ Hanya HRD yang bisa diturunkan dari sini.");
    return;
}

int konfirmasi = JOptionPane.showConfirmDialog(this,
        "Yakin ingin menurunkan HRD ini menjadi Pegawai biasa?\nData lama akan diganti.",
        "Konfirmasi Penurunan Jabatan",
        JOptionPane.YES_NO_OPTION);

if (konfirmasi != JOptionPane.YES_OPTION) return;

try {
    Connection conn = DatabaseConnection.connect();

    // Ambil ID dan nama dari baris terpilih
    int idLama = Integer.parseInt(jTable1.getValueAt(selectedRow, 1).toString()); // kolom 1 = ID
    String nama = jTable1.getValueAt(selectedRow, 2).toString(); // kolom 2 = Nama

    // ✅ Ubah jabatan di tabel users menjadi Pegawai
    String updateUsers = "UPDATE users SET Jabatan = 'Pegawai' WHERE ID = ?";
    PreparedStatement psUpdate = conn.prepareStatement(updateUsers);
    psUpdate.setInt(1, idLama);
    psUpdate.executeUpdate();

    // ✅ Hapus data lama di tabel pegawai (berdasarkan ID lama)
    String deletePegawai = "DELETE FROM pegawai WHERE ID_Pegawai = ?";
    PreparedStatement psDelete = conn.prepareStatement(deletePegawai);
    psDelete.setInt(1, idLama);
    psDelete.executeUpdate();

    // ✅ Setelah ini, saat login dengan akun yang ID-nya sudah berubah,
    // sistem akan otomatis insert data pegawai baru yang sesuai (sinkronisasi otomatis saat login)

    JOptionPane.showMessageDialog(this, "✅ HRD berhasil diturunkan menjadi Pegawai.\nData lama telah dihapus.");

    tampilkanSemuaPegawai(); // refresh tabel

} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "❌ Gagal menurunkan jabatan: " + e.getMessage());
}

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String keyword = jTextField1.getText().trim();

       if (keyword.isEmpty()) {
           JOptionPane.showMessageDialog(this, "⚠️ Masukkan username yang ingin dicari.");
           return;
       }

       DefaultTableModel modelLama = (DefaultTableModel) jTable1.getModel();
       DefaultTableModel modelBaru = new DefaultTableModel();

       modelBaru.addColumn("No");
       modelBaru.addColumn("ID_Hidden");
       modelBaru.addColumn("Username");
       modelBaru.addColumn("Akses");
       modelBaru.addColumn("Jabatan");
       modelBaru.addColumn("Status");

       boolean ditemukan = false;

       for (int i = 0; i < modelLama.getRowCount(); i++) {
           String username = modelLama.getValueAt(i, 2).toString(); // kolom ke-2 = Username

           if (username.toLowerCase().contains(keyword.toLowerCase())) {
               Object[] baris = new Object[6];
               baris[0] = modelLama.getValueAt(i, 0); // No (ID lokal)
               baris[1] = modelLama.getValueAt(i, 1); // ID dari DB (disembunyikan)
               baris[2] = modelLama.getValueAt(i, 2); // Username
               baris[3] = modelLama.getValueAt(i, 3); // Akses
               baris[4] = modelLama.getValueAt(i, 4); // Jabatan
               baris[5] = modelLama.getValueAt(i, 5); // Status

               modelBaru.addRow(baris);
               ditemukan = true;
           }
       }

       if (!ditemukan) {
           JOptionPane.showMessageDialog(this, "❌ Username tidak ditemukan.");
           tampilkanSemuaPegawai(); // Tampilkan kembali tabel default
           return;
       }

       jTable1.setModel(modelBaru);

       // Sembunyikan kolom ID_Hidden
       jTable1.getColumnModel().getColumn(1).setMinWidth(0);
       jTable1.getColumnModel().getColumn(1).setMaxWidth(0);
       jTable1.getColumnModel().getColumn(1).setWidth(0);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        try {
            Connection conn = DatabaseConnection.connect();
            String query = "SELECT * FROM users WHERE Jabatan = 'Pegawai' ORDER BY ID";
            PreparedStatement stmt = conn.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("No");
            model.addColumn("ID_Hidden");
            model.addColumn("Username");
            model.addColumn("Akses");
            model.addColumn("Jabatan");
            model.addColumn("Status");

            int no = 1;
            while (rs.next()) {
                model.addRow(new Object[]{
                    no++,
                    rs.getInt("ID"),
                    rs.getString("Username"),
                    rs.getString("Akses"),
                    rs.getString("Jabatan"),
                    rs.getString("Status")
                });
            }

            jTable1.setModel(model);
            jTable1.getColumnModel().getColumn(1).setMinWidth(0);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(1).setWidth(0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "❌ Gagal menampilkan pegawai biasa: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        tampilkanSemuaPegawai();

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
            Connection conn = DatabaseConnection.connect();
            String query = "SELECT * FROM users WHERE Jabatan = 'HRD' ORDER BY ID";
            PreparedStatement stmt = conn.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("No");
            model.addColumn("ID_Hidden");
            model.addColumn("Username");
            model.addColumn("Akses");
            model.addColumn("Jabatan");
            model.addColumn("Status");

            int no = 1;
            while (rs.next()) {
                model.addRow(new Object[]{
                    no++,
                    rs.getInt("ID"),
                    rs.getString("Username"),
                    rs.getString("Akses"),
                    rs.getString("Jabatan"),
                    rs.getString("Status")
                });
            }

            jTable1.setModel(model);
            jTable1.getColumnModel().getColumn(1).setMinWidth(0);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(1).setWidth(0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "❌ Gagal menampilkan HRD: " + e.getMessage());
    }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        new Admin.Dashboard_Admin().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard_Angkat_Jabatan_Pegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard_Angkat_Jabatan_Pegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard_Angkat_Jabatan_Pegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard_Angkat_Jabatan_Pegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard_Angkat_Jabatan_Pegawai().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
